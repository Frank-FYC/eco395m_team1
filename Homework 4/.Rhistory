labeller = "label_value",
switch = NULL, showStrips = NULL, legend = NULL,
cardinality_threshold = 15, progress = NULL,
legends = stop("deprecated"), alpha=1)
ggpairs(D1, aes(col = factor(clust1$cluster), alpha=1), columns = 1:ncol(D1), title = "Clustering on personal fitness, health and outdoors",
upper = list(continuous = "cor", combo = "box_no_facet", discrete = "facetbar", na = "na"),
lower = list(continuous = "points", combo = "facethist", discrete = "facetbar", na = "na"),
diag = list(continuous =  "densityDiag", discrete = "barDiag", na = "naDiag"), params = NULL,
xlab = NULL, ylab = NULL, axisLabels = c("show"),
labeller = "label_value",
switch = NULL, showStrips = NULL, legend = NULL,
cardinality_threshold = 15, progress = NULL,
legends = stop("deprecated"))
ggpairs(D1, aes(col = factor(clust1$cluster), alpha=0.5), columns = 1:ncol(D1), title = "Clustering on personal fitness, health and outdoors",
upper = list(continuous = "cor", combo = "box_no_facet", discrete = "facetbar", na = "na"),
lower = list(continuous = "points", combo = "facethist", discrete = "facetbar", na = "na"),
diag = list(continuous =  "densityDiag", discrete = "barDiag", na = "naDiag"), params = NULL,
xlab = NULL, ylab = NULL, axisLabels = c("show"),
labeller = "label_value",
switch = NULL, showStrips = NULL, legend = NULL,
cardinality_threshold = 15, progress = NULL,
legends = stop("deprecated"))
D1 = subset(SocialData,select = c("fashion","cooking","beauty", "shopping", "photo_sharing"))
ggpairs(D1, aes(col = factor(clust1$cluster)), columns = 1:ncol(D1), title = "Clustering on personal fitness, health and outdoors",
upper = list(continuous = "cor", combo = "box_no_facet", discrete = "facetbar", na = "na"),
lower = list(continuous = "points", combo = "facethist", discrete = "facetbar", na = "na"),
diag = list(continuous =  "densityDiag", discrete = "barDiag", na = "naDiag"), params = NULL,
xlab = NULL, ylab = NULL, axisLabels = c("show"),
labeller = "label_value",
switch = NULL, showStrips = NULL, legend = NULL,
cardinality_threshold = 15, progress = NULL)
clust1 = kmeans(SocialData_scaled, centers=6, nstart=25)
D1 = subset(SocialData,select = c("personal_fitness","health_nutrition","outdoors"))
ggpairs(D1, aes(col = factor(clust1$cluster), alpha=0.5), columns = 1:ncol(D1), title = "Clustering on personal fitness, health and outdoors",
upper = list(continuous = "cor", combo = "box_no_facet", discrete = "facetbar", na = "na"),
lower = list(continuous = "points", combo = "facethist", discrete = "facetbar", na = "na"),
diag = list(continuous =  "densityDiag", discrete = "barDiag", na = "naDiag"), params = NULL,
xlab = NULL, ylab = NULL, axisLabels = c("show"),
labeller = "label_value",
switch = NULL, showStrips = NULL, legend = NULL,
cardinality_threshold = 15, progress = NULL)
D1 = subset(SocialData,select = c("fashion","cooking","beauty", "shopping", "photo_sharing"))
ggpairs(D1, aes(col = factor(clust1$cluster)), columns = 1:ncol(D1), title = "Clustering on personal fitness, health and outdoors",
upper = list(continuous = "cor", combo = "box_no_facet", discrete = "facetbar", na = "na"),
lower = list(continuous = "points", combo = "facethist", discrete = "facetbar", na = "na"),
diag = list(continuous =  "densityDiag", discrete = "barDiag", na = "naDiag"), params = NULL,
xlab = NULL, ylab = NULL, axisLabels = c("show"),
labeller = "label_value",
switch = NULL, showStrips = NULL, legend = NULL,
cardinality_threshold = 15, progress = NULL)
library(foreach)
library(cluster)
library(corrplot)
library(plotly)
library(GGally)
library(HSAUR)
#36 different categories
SocialData <- read.csv("https://raw.githubusercontent.com/jgscott/ECO395M/master/data/social_marketing.csv", row.names=1)
#delete users with spam
SocialData<-SocialData[(SocialData$spam==0),]
#delete uncategorized label "chatter"
SocialData <- subset(SocialData, select = -c(chatter, uncategorized))
#add total tweets & calculate adult ratio & delete adult ratio more than 30%
SocialData <- cbind(tot_twt = rowSums(SocialData), SocialData)
SocialData <- cbind(adult_ratio = 1, SocialData)
SocialData$adult_ratio <- SocialData$adult/SocialData$tot_twt
SocialData<-SocialData[(SocialData$adult_ratio<0.2),]
#delete uncategorized label "unused attributes"
SocialData <- subset(SocialData, select = -c(adult_ratio, tot_twt, spam))
# Center/scale the data
#SocialData = SocialData[,-(1,35)]
SocialData_scaled <- scale(SocialData, center=TRUE, scale=TRUE)
#K-grid to find the optimal K
k_grid = seq(2, 20, by=1)
SSE_grid = foreach(k = k_grid, .combine='c') %do% {
cluster_k = kmeans(SocialData_scaled, k, nstart=50)
cluster_k$tot.withinss
}
plot(k_grid, SSE_grid, xlab="K",ylab="SSE Grid", sub="SSE Grid vs K")
#CH-grid to find the optimal K
N=nrow(SocialData)
CH_grid = foreach(k = k_grid, .combine='c') %do% {
cluster_k = kmeans(SocialData_scaled, k, nstart=20)
W = cluster_k$tot.withinss
B = cluster_k$betweenss
CH = (B/W)*((N-k)/(k-1))
CH
}
plot(k_grid, CH_grid, xlab="K",
ylab="CH Grid",
sub="CH Grid vs K")
#Gap statistics
Market_gap = clusGap(SocialData_scaled, FUN = kmeans, nstart = 20, K.max = 10, B = 10)
plot(Market_gap)
#correlation and visualization
corr <- cor(SocialData_scaled)
corrplot(corr, type="upper", tl.cex = 0.5, tl.col="black", order="hclust", col=c("black", "white"), bg="darkgreen")
# k-means analysis
clust1 = kmeans(SocialData_scaled, centers=6, nstart=25)
D1 = subset(SocialData,select = c("personal_fitness","health_nutrition","outdoors"))
ggpairs(D1, aes(col = factor(clust1$cluster), alpha=0.5), columns = 1:ncol(D1), title = "Clustering on personal fitness, health and outdoors",
upper = list(continuous = "cor", combo = "box_no_facet", discrete = "facetbar", na = "na"),
lower = list(continuous = "points", combo = "facethist", discrete = "facetbar", na = "na"),
diag = list(continuous =  "densityDiag", discrete = "barDiag", na = "naDiag"), params = NULL,
xlab = NULL, ylab = NULL, axisLabels = c("show"),
labeller = "label_value",
switch = NULL, showStrips = NULL, legend = NULL,
cardinality_threshold = 15, progress = NULL)
D1 = subset(SocialData,select = c("fashion","cooking","beauty", "shopping", "photo_sharing"))
ggpairs(D1, aes(col = factor(clust1$cluster)), columns = 1:ncol(D1), title = "Clustering on personal fitness, health and outdoors",
upper = list(continuous = "cor", combo = "box_no_facet", discrete = "facetbar", na = "na"),
lower = list(continuous = "points", combo = "facethist", discrete = "facetbar", na = "na"),
diag = list(continuous =  "densityDiag", discrete = "barDiag", na = "naDiag"), params = NULL,
xlab = NULL, ylab = NULL, axisLabels = c("show"),
labeller = "label_value",
switch = NULL, showStrips = NULL, legend = NULL,
cardinality_threshold = 15, progress = NULL)
D1 = subset(SocialData,select = c("online_gaming","college_uni","sports_playing"))
ggpairs(D1, aes(col = factor(clust1$cluster)), columns = 1:ncol(D1), title = "Clustering on personal fitness, health and outdoors",
upper = list(continuous = "cor", combo = "box_no_facet", discrete = "facetbar", na = "na"),
lower = list(continuous = "points", combo = "facethist", discrete = "facetbar", na = "na"),
diag = list(continuous =  "densityDiag", discrete = "barDiag", na = "naDiag"), params = NULL,
xlab = NULL, ylab = NULL, axisLabels = c("show"),
labeller = "label_value",
switch = NULL, showStrips = NULL, legend = NULL,
cardinality_threshold = 15, progress = NULL)
D1 = subset(SocialData,select = c("sports_fandom","parenting","school","food", "family"))
ggpairs(D1, aes(col = factor(clust1$cluster)), columns = 1:ncol(D1), title = "Clustering on personal fitness, health and outdoors",
upper = list(continuous = "cor", combo = "box_no_facet", discrete = "facetbar", na = "na"),
lower = list(continuous = "points", combo = "facethist", discrete = "facetbar", na = "na"),
diag = list(continuous =  "densityDiag", discrete = "barDiag", na = "naDiag"), params = NULL,
xlab = NULL, ylab = NULL, axisLabels = c("show"),
labeller = "label_value",
switch = NULL, showStrips = NULL, legend = NULL,
cardinality_threshold = 15, progress = NULL)
# k-means analysis
clust1 = kmeans(SocialData_scaled, centers=6, nstart=25)
D1 = subset(SocialData,select = c("personal_fitness","health_nutrition","outdoors"))
ggpairs(D1, aes(col = factor(clust1$cluster), alpha=0.5), columns = 1:ncol(D1), title = "Clustering on personal fitness, health and outdoors",
upper = list(continuous = "cor", combo = "box_no_facet", discrete = "facetbar", na = "na"),
lower = list(continuous = "points", combo = "facethist", discrete = "facetbar", na = "na"),
diag = list(continuous =  "densityDiag", discrete = "barDiag", na = "naDiag"), params = NULL,
xlab = NULL, ylab = NULL, axisLabels = c("show"),
labeller = "label_value",
switch = NULL, showStrips = NULL, legend = NULL,
cardinality_threshold = 15, progress = NULL)
D1 = subset(SocialData,select = c("fashion","cooking","beauty", "shopping", "photo_sharing"))
ggpairs(D1, aes(col = factor(clust1$cluster), alpha=0.5), columns = 1:ncol(D1), title = "Clustering on personal fitness, health and outdoors",
upper = list(continuous = "cor", combo = "box_no_facet", discrete = "facetbar", na = "na"),
lower = list(continuous = "points", combo = "facethist", discrete = "facetbar", na = "na"),
diag = list(continuous =  "densityDiag", discrete = "barDiag", na = "naDiag"), params = NULL,
xlab = NULL, ylab = NULL, axisLabels = c("show"),
labeller = "label_value",
switch = NULL, showStrips = NULL, legend = NULL,
cardinality_threshold = 15, progress = NULL)
D1 = subset(SocialData,select = c("online_gaming","college_uni","sports_playing"))
ggpairs(D1, aes(col = factor(clust1$cluster), alpha=0.5), columns = 1:ncol(D1), title = "Clustering on personal fitness, health and outdoors",
upper = list(continuous = "cor", combo = "box_no_facet", discrete = "facetbar", na = "na"),
lower = list(continuous = "points", combo = "facethist", discrete = "facetbar", na = "na"),
diag = list(continuous =  "densityDiag", discrete = "barDiag", na = "naDiag"), params = NULL,
xlab = NULL, ylab = NULL, axisLabels = c("show"),
labeller = "label_value",
switch = NULL, showStrips = NULL, legend = NULL,
cardinality_threshold = 15, progress = NULL)
D1 = subset(SocialData,select = c("sports_fandom","parenting","school","food", "family"))
ggpairs(D1, aes(col = factor(clust1$cluster), alpha=0.5), columns = 1:ncol(D1), title = "Clustering on personal fitness, health and outdoors",
upper = list(continuous = "cor", combo = "box_no_facet", discrete = "facetbar", na = "na"),
lower = list(continuous = "points", combo = "facethist", discrete = "facetbar", na = "na"),
diag = list(continuous =  "densityDiag", discrete = "barDiag", na = "naDiag"), params = NULL,
xlab = NULL, ylab = NULL, axisLabels = c("show"),
labeller = "label_value",
switch = NULL, showStrips = NULL, legend = NULL,
cardinality_threshold = 15, progress = NULL)
D1 = subset(SocialData,select = c("politics","news","computers", "travel", "automotive"))
ggpairs(D1, aes(col = factor(clust1$cluster), alpha=0.5), columns = 1:ncol(D1), title = "Clustering on personal fitness, health and outdoors",
upper = list(continuous = "cor", combo = "box_no_facet", discrete = "facetbar", na = "na"),
lower = list(continuous = "points", combo = "facethist", discrete = "facetbar", na = "na"),
diag = list(continuous =  "densityDiag", discrete = "barDiag", na = "naDiag"), params = NULL,
xlab = NULL, ylab = NULL, axisLabels = c("show"),
labeller = "label_value",
switch = NULL, showStrips = NULL, legend = NULL,
cardinality_threshold = 15, progress = NULL)
D1 = subset(SocialData,select = c("tv_film","art","music"))
ggpairs(D1, aes(col = factor(clust1$cluster), alpha=0.5), columns = 1:ncol(D1), title = "Clustering on personal fitness, health and outdoors",
upper = list(continuous = "cor", combo = "box_no_facet", discrete = "facetbar", na = "na"),
lower = list(continuous = "points", combo = "facethist", discrete = "facetbar", na = "na"),
diag = list(continuous =  "densityDiag", discrete = "barDiag", na = "naDiag"), params = NULL,
xlab = NULL, ylab = NULL, axisLabels = c("show"),
labeller = "label_value",
switch = NULL, showStrips = NULL, legend = NULL,
cardinality_threshold = 15, progress = NULL)
SocialMarket <- read.csv("https://raw.githubusercontent.com/jgscott/ECO395M/master/data/social_marketing.csv", row.names=1)
#delete users with spam
SocialMarket<-SocialMarket[(SocialMarket$spam==0),]
#delete uncategorized label "chatter"
SocialMarket <- subset(SocialMarket, select = -c(chatter, uncategorized))
#add total tweets & calculate adult ratio & delete adult ratio more than 30%
SocialMarket <- cbind(tot_twt = rowSums(SocialMarket), SocialMarket)
SocialMarket <- cbind(adult_ratio = 1, SocialMarket)
SocialMarket$adult_ratio <- SocialMarket$adult/SocialMarket$tot_twt
SocialMarket<-SocialMarket[(SocialMarket$adult_ratio<0.2),]
#delete uncategorized label "unused attributes"
SocialMarket <- subset(SocialMarket, select = -c(adult_ratio, tot_twt, spam))
#center and scale the data
SocialMarket = scale(SocialMarket, center=TRUE, scale=TRUE)
# correlation
cor=cor(SocialMarket)
# correlation
corr=cor(SocialMarket)
# PCA
pca = prcomp(SocialMarket,scale=TRUE)
loadings = pca$rotation
scores = pca$x
# PVE
V = pca$sdev^2
PVE = V / sum(V)
round(PVE, 2)
Plot1 = qplot(c(1:33), PVE) +
geom_line() +
xlab("Principal Component") +
ylab("PVE") +
ggtitle("Scree Plot") +
ylim(0, 0.15)
Plot1
Plot2 = qplot(c(1:33), cumsum(PVE)) +
geom_line() +
xlab("Principal Component") +
ylab(NULL) +
ggtitle("Cumulative Scree Plot") +
ylim(0,1)
Plot2
# extract market segments
o1 = order(loadings[,1], decreasing=TRUE)
colnames(SocialMarket)[head(o1,5)]
o2 = order(loadings[,2], decreasing=TRUE)
colnames(SocialMarket)[head(o2,5)]
o3 = order(loadings[,3], decreasing=TRUE)
colnames(SocialMarket)[head(o3,5)]
o4 = order(loadings[,4], decreasing=TRUE)
colnames(SocialMarket)[head(o4,5)]
colnames(SocialMarket)[head(o5,5)]
o6 = order(loadings[,6], decreasing=TRUE)
colnames(SocialMarket)[head(o6,5)]
o5 = order(loadings[,5], decreasing=TRUE)
o7 = order(loadings[,7], decreasing=TRUE)
colnames(SocialMarket)[head(o7,5)]
o8 = order(loadings[,8], decreasing=TRUE)
colnames(SocialMarket)[head(o8,5)]
# extract market segments
o1 = order(loadings[,1], decreasing=TRUE)
colnames(SocialMarket)[head(o1,5)]
o2 = order(loadings[,2], decreasing=TRUE)
colnames(SocialMarket)[head(o2,5)]
o3 = order(loadings[,3], decreasing=TRUE)
colnames(SocialMarket)[head(o3,5)]
o4 = order(loadings[,4], decreasing=TRUE)
colnames(SocialMarket)[head(o4,5)]
o5 = order(loadings[,5], decreasing=TRUE)
colnames(SocialMarket)[head(o5,5)]
o6 = order(loadings[,6], decreasing=TRUE)
colnames(SocialMarket)[head(o6,5)]
o7 = order(loadings[,7], decreasing=TRUE)
colnames(SocialMarket)[head(o7,5)]
o8 = order(loadings[,8], decreasing=TRUE)
colnames(SocialMarket)[head(o8,5)]
source('C:/Users/Tessie Krishna/Desktop/Q2.R', echo=TRUE)
source('C:/Users/Tessie Krishna/Desktop/Q2.R', echo=TRUE)
source('~/GitHub/eco395m_team_awesome/Homework 4/Question 2.R', echo=TRUE)
corrplot(corr, type="upper", tl.cex = 0.5, tl.col="black", order="hclust")
corrplot(corr, method="color", type="upper", tl.cex = 0.5, tl.col="black", order="hclust")
install.packages("ISLR")
install.packages("xtable")
install.packages("xtable")
install.packages("psych")
install.packages("arules")
install.packages("arulesViz")
install.packages("data.table")
install.packages("arulesViz")
install.packages("LICORS")
install.packages("arulesViz")
setwd("~/GitHub/eco395m_team_awesome/Homework 4")
knitr::opts_chunk$set(echo = TRUE)
library(ISLR)
library(tidyverse)
library(ggplot2)
library(psych)
library(xtable)
wine <- read.csv("wine.csv", header = TRUE)
# Pick out the pca columns
Z = wine[,c(1:9)]
# Standardize (center/scale) the data
Z_std = scale(Z, center=TRUE, scale=TRUE)
plot(Z_std)
x_wine = as.matrix(wine[,1:11])
y_wine_quality= wine[,12]
y_wine_color= wine[,13]
# Let's try dimensionality reduction via PCA
pc_wine = prcomp(x_wine, scale=TRUE)
# pc_wine$x has the summary variables
# Regress on the first K
K = 3
scores = pc_wine$x[,1:K]
pcr1 = lm(y_wine_quality ~ scores)
print(xtable(summary(pcr1)),comment=FALSE)
# fancy plot matrix with stuff, see http://www.sthda.com/english/wiki/scatter-plot-matrices-r-base-graphs
pairs.panels(Z_std[,1:6],
method = "pearson", # correlation method
hist.col = "#00AFBB",
density = TRUE,  # show density plots
ellipses = TRUE # show correlation ellipses
)
# Show the model fit
par(mfrow=c(2,2))
plot(fitted(pcr1), y_wine_quality, main="Wine Quality and PC 1", ylab = "Wine Quality",xlab = "Estimated Wine Quality from PCA")
plot(seq(1,11,by=1), pc_wine$rotation[,1], main="Coefficients of PC 1", ylab = "PC 1 Effects",xlab = "PC Input Variables")
plot(seq(1,11,by=1), pc_wine$rotation[,2], main="Coefficients of PC 2", ylab = "PC 2 Effects",xlab = "PC Input Variables")
plot(seq(1,11,by=1), pc_wine$rotation[,3], main="Coefficients of PC 3", ylab = "PC 3 Effects",xlab = "PC Input Variables")
library(ggplot2)
library(LICORS)  # for kmeans++
library(foreach)
library(mosaic)
library(gridExtra)
library(grid)
# Center and scale the data
X = wine[,c(1:9)]
X = scale(X, center=TRUE, scale=TRUE)
# Extract the centers and scales from the rescaled data (which are named attributes)
mu = attr(X,"scaled:center")
sigma = attr(X,"scaled:scale")
# Run k-means with 2 clusters and 25 starts
clust1 = kmeans(X, 2, nstart=25)
# Using kmeans++ initialization
clust2 = kmeanspp(X, k=2, nstart=25)
# What are the clusters?
print("Cluster 1")
clust2$center[1,]*sigma + mu
print("Cluster 2")
clust2$center[2,]*sigma + mu
qplot(fixed.acidity, volatile.acidity, data=wine, color=factor(clust2$cluster),main = "Volatile and Fixed Acidity by Wine Type")+
labs(colour = "Wine Type")
qplot(citric.acid, residual.sugar, data=wine, color=factor(clust2$cluster),main = "Citric Acid and Residual Sugar by Wine Type by Wine Type")+
labs(colour = "Wine Type")
qplot(quality, color, data=wine, color=factor(clust2$cluster),main = "Wine Qualiy and Color by actual Wine Type")+
labs(colour = "Wine Type")
library(foreach)
library(cluster)
library(corrplot)
library(plotly)
library(GGally)
library(HSAUR)
#36 different categories
SocialData <- read.csv("https://raw.githubusercontent.com/jgscott/ECO395M/master/data/social_marketing.csv", row.names=1)
#delete users with spam
SocialData<-SocialData[(SocialData$spam==0),]
#delete uncategorized label "chatter"
SocialData <- subset(SocialData, select = -c(chatter, uncategorized))
#add total tweets & calculate adult ratio & delete adult ratio more than 30%
SocialData <- cbind(tot_twt = rowSums(SocialData), SocialData)
SocialData <- cbind(adult_ratio = 1, SocialData)
SocialData$adult_ratio <- SocialData$adult/SocialData$tot_twt
SocialData<-SocialData[(SocialData$adult_ratio<0.3),]
#delete uncategorized label "unused attributes"
SocialData <- subset(SocialData, select = -c(adult_ratio, tot_twt, spam))
# Center/scale the data
SocialData_scaled <- scale(SocialData, center=TRUE, scale=TRUE)
#K-grid to find the optimal K
k_grid = seq(2, 20, by=1)
SSE_grid = foreach(k = k_grid, .combine='c') %do% {
cluster_k = kmeans(SocialData_scaled, k, nstart=50)
cluster_k$tot.withinss
}
plot(k_grid, SSE_grid, xlab="K",ylab="SSE Grid", sub="SSE Grid vs K")
#CH-grid to find the optimal K
N=nrow(SocialData)
CH_grid = foreach(k = k_grid, .combine='c') %do% {
cluster_k = kmeans(SocialData_scaled, k, nstart=20)
W = cluster_k$tot.withinss
B = cluster_k$betweenss
CH = (B/W)*((N-k)/(k-1))
CH
}
plot(k_grid, CH_grid, xlab="K",
ylab="CH Grid",
sub="CH Grid vs K")
#Gap statistics
Market_gap = clusGap(SocialData_scaled, FUN = kmeans, nstart = 20, K.max = 10, B = 10)
plot(Market_gap)
#correlation and visualization
corr <- cor(SocialData_scaled)
corrplot(corr, method="color", type="upper", tl.cex = 0.5, tl.col="black", order="hclust")
# k-means analysis
clust1 = kmeans(SocialData_scaled, centers=6, nstart=25)
D1 = subset(SocialData,select = c("personal_fitness","health_nutrition","outdoors"))
ggpairs(D1, aes(col = factor(clust1$cluster), alpha=0.5), columns = 1:ncol(D1), title = "Clusters on personal fitness, health and outdoors",
upper = list(continuous = "cor", combo = "box_no_facet", discrete = "facetbar", na = "na"),
lower = list(continuous = "points", combo = "facethist", discrete = "facetbar", na = "na"),
diag = list(continuous =  "densityDiag", discrete = "barDiag", na = "naDiag"), params = NULL,
xlab = NULL, ylab = NULL, axisLabels = c("show"),
labeller = "label_value",
switch = NULL, showStrips = NULL, legend = NULL,
cardinality_threshold = 15, progress = NULL)
D2 = subset(SocialData,select = c("fashion","cooking","beauty", "shopping", "photo_sharing"))
ggpairs(D2, aes(col = factor(clust1$cluster), alpha=0.5), columns = 1:ncol(D1), title = "Clusters on fashion, cooking, beauty, shopping and photosharing",
upper = list(continuous = "cor", combo = "box_no_facet", discrete = "facetbar", na = "na"),
lower = list(continuous = "points", combo = "facethist", discrete = "facetbar", na = "na"),
diag = list(continuous =  "densityDiag", discrete = "barDiag", na = "naDiag"), params = NULL,
xlab = NULL, ylab = NULL, axisLabels = c("show"),
labeller = "label_value",
switch = NULL, showStrips = NULL, legend = NULL,
cardinality_threshold = 15, progress = NULL)
D3 = subset(SocialData,select = c("online_gaming","college_uni","sports_playing"))
ggpairs(D3, aes(col = factor(clust1$cluster), alpha=0.5), columns = 1:ncol(D1), title = "Clusters on gaming, university and sports",
upper = list(continuous = "cor", combo = "box_no_facet", discrete = "facetbar", na = "na"),
lower = list(continuous = "points", combo = "facethist", discrete = "facetbar", na = "na"),
diag = list(continuous =  "densityDiag", discrete = "barDiag", na = "naDiag"), params = NULL,
xlab = NULL, ylab = NULL, axisLabels = c("show"),
labeller = "label_value",
switch = NULL, showStrips = NULL, legend = NULL,
cardinality_threshold = 15, progress = NULL)
D4 = subset(SocialData,select = c("sports_fandom","parenting","school","food", "family"))
ggpairs(D4, aes(col = factor(clust1$cluster), alpha=0.5), columns = 1:ncol(D1), title = "Clusters on sports, parenting, school, food, family",
upper = list(continuous = "cor", combo = "box_no_facet", discrete = "facetbar", na = "na"),
lower = list(continuous = "points", combo = "facethist", discrete = "facetbar", na = "na"),
diag = list(continuous =  "densityDiag", discrete = "barDiag", na = "naDiag"), params = NULL,
xlab = NULL, ylab = NULL, axisLabels = c("show"),
labeller = "label_value",
switch = NULL, showStrips = NULL, legend = NULL,
cardinality_threshold = 15, progress = NULL)
D5 = subset(SocialData,select = c("politics","news","computers", "travel", "automotive"))
ggpairs(D5, aes(col = factor(clust1$cluster), alpha=0.5), columns = 1:ncol(D1), title = "Clusters on politics, news, computers, travel, automotive",
upper = list(continuous = "cor", combo = "box_no_facet", discrete = "facetbar", na = "na"),
lower = list(continuous = "points", combo = "facethist", discrete = "facetbar", na = "na"),
diag = list(continuous =  "densityDiag", discrete = "barDiag", na = "naDiag"), params = NULL,
xlab = NULL, ylab = NULL, axisLabels = c("show"),
labeller = "label_value",
switch = NULL, showStrips = NULL, legend = NULL,
cardinality_threshold = 15, progress = NULL)
D6 = subset(SocialData,select = c("tv_film","art","music"))
ggpairs(D6, aes(col = factor(clust1$cluster), alpha=0.5), columns = 1:ncol(D1), title = "Clusters on tv, art, music",
upper = list(continuous = "cor", combo = "box_no_facet", discrete = "facetbar", na = "na"),
lower = list(continuous = "points", combo = "facethist", discrete = "facetbar", na = "na"),
diag = list(continuous =  "densityDiag", discrete = "barDiag", na = "naDiag"), params = NULL,
xlab = NULL, ylab = NULL, axisLabels = c("show"),
labeller = "label_value",
switch = NULL, showStrips = NULL, legend = NULL,
cardinality_threshold = 15, progress = NULL)
SocialMarket <- read.csv("https://raw.githubusercontent.com/jgscott/ECO395M/master/data/social_marketing.csv", row.names=1)
#delete users with spam
SocialMarket<-SocialMarket[(SocialMarket$spam==0),]
#delete uncategorized label "chatter"
SocialMarket <- subset(SocialMarket, select = -c(chatter, uncategorized))
#add total tweets & calculate adult ratio & delete adult ratio more than 30%
SocialMarket <- cbind(tot_twt = rowSums(SocialMarket), SocialMarket)
SocialMarket <- cbind(adult_ratio = 1, SocialMarket)
SocialMarket$adult_ratio <- SocialMarket$adult/SocialMarket$tot_twt
SocialMarket<-SocialMarket[(SocialMarket$adult_ratio<0.3),]
#delete uncategorized label "unused attributes"
SocialMarket <- subset(SocialMarket, select = -c(adult_ratio, tot_twt, spam))
#center and scale the data
SocialMarket = scale(SocialMarket, center=TRUE, scale=TRUE)
# correlation
corr=cor(SocialMarket)
# PCA
pca = prcomp(SocialMarket,scale=TRUE)
loadings = pca$rotation
scores = pca$x
# PVE
V = pca$sdev^2
PVE = V / sum(V)
round(PVE, 2)
Plot1 = qplot(c(1:33), PVE) +
geom_line() +
xlab("Principal Component") +
ylab("PVE") +
ggtitle("Scree Plot") +
ylim(0, 0.15)
Plot1
Plot2 = qplot(c(1:33), cumsum(PVE)) +
geom_line() +
xlab("Principal Component") +
ylab(NULL) +
ggtitle("Cumulative Scree Plot") +
ylim(0,1)
Plot2
# extract market segments
o1 = order(loadings[,1], decreasing=TRUE)
colnames(SocialMarket)[head(o1,5)]
o2 = order(loadings[,2], decreasing=TRUE)
colnames(SocialMarket)[head(o2,5)]
o3 = order(loadings[,3], decreasing=TRUE)
colnames(SocialMarket)[head(o3,5)]
o4 = order(loadings[,4], decreasing=TRUE)
colnames(SocialMarket)[head(o4,5)]
o5 = order(loadings[,5], decreasing=TRUE)
colnames(SocialMarket)[head(o5,5)]
o6 = order(loadings[,6], decreasing=TRUE)
colnames(SocialMarket)[head(o6,5)]
o7 = order(loadings[,7], decreasing=TRUE)
colnames(SocialMarket)[head(o7,5)]
library(tidyverse)
library(arules)  # has a big ecosystem of packages built around it
library(arulesViz)
install.packages("arulesViz")
library(arulesViz)
install.packages("fpc")
install.packages(c("assertthat", "backports", "BDgraph", "broom", "callr", "cli", "clipr", "colorspace", "dbplyr", "DescTools", "devtools", "elliptic", "emmeans", "expm", "expss", "fastDummies", "fs", "ggplot2", "git2r", "glue", "gtable", "highr", "httpuv", "huge", "igraph", "lazyeval", "loo", "MuMIn", "openssl", "pkgbuild", "plotly", "psycho", "purrr", "Rcpp", "readxl", "remotes", "rJava", "rlang", "rmarkdown", "rstudioapi", "rvest", "sandwich", "shiny", "stringi", "sys", "tibble", "tinytex", "usethis", "xfun", "zoo"))
install.packages("fpc")
library(arulesViz)
install.packages("C:/Users/Tessie Krishna/Desktop/fpc_2.1-11.2.tar.gz", repos = NULL, type = "source")
library(arulesViz)
library(fpc)
install.packages("C:/Users/Tessie Krishna/Desktop/fpc_2.1-11.2.tar.gz", repos = NULL, type = "source")
