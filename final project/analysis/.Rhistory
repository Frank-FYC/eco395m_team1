# Train/test split
#####
# randomly sample a set of data points to include in the training set
train_ind = sample.int(N, N_train, replace=FALSE)
# Define the training and testing set
D_train = loadhou[train_ind,]
D_test = loadhou[-train_ind,]
gwd
wd
getwd
getwd()
library(tidyverse)
library(FNN)
# read in the data: make sure to use the path name to
# wherever you'd stored the file
loadhou = read.csv('C:/Dropbox/Classes/ECO 395M Data mining and statisical learning/github_clone/ECO395M/data/loadhou.csv')
summary(loadhou)
# plot the data
ggplot(data = loadhou) +
geom_point(mapping = aes(x = KHOU, y = COAST), color='darkgrey') +
ylim(7000, 20000)
# Make a train-test split
N = nrow(loadhou)
N_train = floor(0.8*N)
N_test = N - N_train
#####
# Train/test split
#####
# randomly sample a set of data points to include in the training set
train_ind = sample.int(N, N_train, replace=FALSE)
# Define the training and testing set
D_train = loadhou[train_ind,]
D_test = loadhou[-train_ind,]
# optional book-keeping step:
# reorder the rows of the testing set by the KHOU (temperature) variable
# this isn't necessary, but it will allow us to make a pretty plot later
D_test = arrange(D_test, KHOU)
head(D_test)
# Now separate the training and testing sets into features (X) and outcome (y)
X_train = select(D_train, KHOU)
y_train = select(D_train, COAST)
X_test = select(D_test, KHOU)
y_test = select(D_test, COAST)
#####
# Fit a few models
#####
# linear and quadratic models
lm1 = lm(COAST ~ KHOU, data=D_train)
lm2 = lm(COAST ~ poly(KHOU, 2), data=D_train)
# KNN 250
knn250 = knn.reg(train = X_train, test = X_test, y = y_train, k=250)
names(knn250)
library(tidyverse)
library(FNN)
# read in the data: make sure to use the path name to
# wherever you'd stored the file
loadhou = read.csv('C:/Dropbox/Classes/ECO 395M Data mining and statisical learning/github_clone/ECO395M/data/loadhou.csv')
summary(loadhou)
# plot the data
ggplot(data = loadhou) +
geom_point(mapping = aes(x = KHOU, y = COAST), color='darkgrey') +
ylim(7000, 20000)
# Make a train-test split
N = nrow(loadhou)
N_train = floor(0.8*N)
N_test = N - N_train
#####
# Train/test split
#####
# randomly sample a set of data points to include in the training set
train_ind = sample.int(N, N_train, replace=FALSE)
# Define the training and testing set
D_train = loadhou[train_ind,]
D_test = loadhou[-train_ind,]
# optional book-keeping step:
# reorder the rows of the testing set by the KHOU (temperature) variable
# this isn't necessary, but it will allow us to make a pretty plot later
D_test = arrange(D_test, KHOU)
head(D_test)
# Now separate the training and testing sets into features (X) and outcome (y)
X_train = select(D_train, KHOU)
y_train = select(D_train, COAST)
X_test = select(D_test, KHOU)
y_test = select(D_test, COAST)
#####
# Fit a few models
#####
# linear and quadratic models
lm1 = lm(COAST ~ KHOU, data=D_train)
lm2 = lm(COAST ~ poly(KHOU, 2), data=D_train)
# KNN 250
knn250 = knn.reg(train = X_train, test = X_test, y = y_train, k=250)
names(knn250)
#####
# Compare the models by RMSE_out
#####
# define a helper function for calculating RMSE
rmse = function(y, ypred) {
sqrt(mean((y-ypred)^2))
}
ypred_lm1 = predict(lm1, X_test)
ypred_lm2 = predict(lm2, X_test)
ypred_knn250 = knn250$pred
rmse(y_test, ypred_lm1)
rmse(y_test, ypred_lm2)
rmse(y_test, ypred_knn250)
ypred_lm1 = predict(lm1, X_test)
ypred_lm2 = predict(lm2, X_test)
ypred_knn250 = knn250$pred
rmse(y_test, ypred_lm1)
rmse(y_test, ypred_lm2)
rmse(y_test, ypred_knn250)
ypred_lm1
y_test
ypred_lm1
rmse(y_test, ypred_lm1)
rmse(y_test, ypred_lm2)
rmse(y_test, ypred_knn250)
rmse = function(y, x) {
sqrt(mean((y-ypred)^2))
}
rmse(y_test, ypred_lm1)
rmse(y_test, ypred_lm2)
rmse(y_test, ypred_knn250)
ypred_lm1 = predict(lm1, X_test)
ypred_lm2 = predict(lm2, X_test)
ypred_knn250 = knn250$pred
rmse(y_test, ypred_lm1)
rmse(y_test, ypred_lm2)
rmse(y_test, ypred_knn250)
rmse = function(y, x) {
sqrt(mean((y-x)^2))
}
ypred_lm1 = predict(lm1, X_test)
ypred_lm2 = predict(lm2, X_test)
ypred_knn250 = knn250$pred
rmse(y_test, ypred_lm1)
rmse(y_test, ypred_lm2)
rmse(y_test, ypred_knn250)
y_test
ypred_lm1
rmse = function(y, ypred) {
sqrt(mean((y-as.numeric(ypred))^2))
}
ypred_lm1 = predict(lm1, X_test)
ypred_lm2 = predict(lm2, X_test)
ypred_knn250 = knn250$pred
rmse(y_test, ypred_lm1)
rmse(y_test, ypred_lm2)
rmse(y_test, ypred_knn250)
as.numeric(ypred_lm1)
rmse(y_test, ypred_lm1)
y_test
as.numeric(ypred_lm1)
data.matrix(ypred_lm1)
rmse(y_test, ypred_lm1)
rmse = function(y, ypred) {
sqrt(mean((data.matrix(y-ypred))^2))
}
ypred_lm1 = predict(lm1, X_test)
ypred_lm2 = predict(lm2, X_test)
ypred_knn250 = knn250$pred
rmse(y_test, ypred_lm1)
rmse(y_test, ypred_lm2)
rmse(y_test, ypred_knn250)
# attach the predictions to the test data frame
D_test$ypred_lm2 = ypred_lm2
D_test$ypred_knn250 = ypred_knn250
p_test = ggplot(data = D_test) +
geom_point(mapping = aes(x = KHOU, y = COAST), color='lightgrey') +
theme_bw(base_size=18) +
ylim(7000, 20000)
p_test
p_test + geom_point(aes(x = KHOU, y = ypred_knn250), color='red')
p_test + geom_path(aes(x = KHOU, y = ypred_knn250), color='red')
p_test + geom_path(aes(x = KHOU, y = ypred_knn250), color='red') +
geom_path(aes(x = KHOU, y = ypred_lm2), color='blue')
N
source('C:/Dropbox/Classes/ECO 395M Data mining and statisical learning/2019-02-06 Class/in-class exercise.R', echo=TRUE)
n
N
source('C:/Dropbox/Classes/ECO 395M Data mining and statisical learning/2019-02-06 Class/in-class exercise.R', echo=TRUE)
N
loadhou = loadhou[sample(nrow(loadhou), 150), ]
loadhou
source('C:/Dropbox/Classes/ECO 395M Data mining and statisical learning/2019-02-06 Class/in-class exercise.R', echo=TRUE)
source('C:/Dropbox/Classes/ECO 395M Data mining and statisical learning/2019-02-06 Class/in-class exercise.R', echo=TRUE)
source('C:/Dropbox/Classes/ECO 395M Data mining and statisical learning/2019-02-06 Class/in-class exercise.R', echo=TRUE)
source('C:/Dropbox/Classes/ECO 395M Data mining and statisical learning/2019-02-06 Class/in-class exercise.R', echo=TRUE)
source('C:/Dropbox/Classes/ECO 395M Data mining and statisical learning/2019-02-06 Class/in-class exercise.R', echo=TRUE)
source('C:/Dropbox/Classes/ECO 395M Data mining and statisical learning/2019-02-06 Class/in-class exercise.R', echo=TRUE)
source('C:/Dropbox/Classes/ECO 395M Data mining and statisical learning/2019-02-06 Class/in-class exercise.R', echo=TRUE)
source('C:/Dropbox/Classes/ECO 395M Data mining and statisical learning/2019-02-06 Class/in-class exercise.R', echo=TRUE)
source('C:/Dropbox/Classes/ECO 395M Data mining and statisical learning/2019-02-06 Class/in-class exercise.R', echo=TRUE)
loadhou = loadhou[sample.int(nrow(loadhou), 150), replace=FALSE]
source('C:/Dropbox/Classes/ECO 395M Data mining and statisical learning/2019-02-06 Class/in-class exercise.R', echo=TRUE)
source('C:/Dropbox/Classes/ECO 395M Data mining and statisical learning/2019-02-06 Class/in-class exercise.R', echo=TRUE)
source('C:/Dropbox/Classes/ECO 395M Data mining and statisical learning/2019-02-06 Class/in-class exercise.R', echo=TRUE)
source('C:/Dropbox/Classes/ECO 395M Data mining and statisical learning/2019-02-06 Class/in-class exercise.R', echo=TRUE)
loadhou_sample = loadhou[sample.int(nrow(loadhou), 150), ]
loadhou_sample
source('C:/Dropbox/Classes/ECO 395M Data mining and statisical learning/2019-02-06 Class/in-class exercise.R', echo=TRUE)
source('C:/Dropbox/Classes/ECO 395M Data mining and statisical learning/2019-02-06 Class/in-class exercise.R', echo=TRUE)
source('C:/Dropbox/Classes/ECO 395M Data mining and statisical learning/2019-02-06 Class/in-class exercise.R', echo=TRUE)
source('C:/Dropbox/Classes/ECO 395M Data mining and statisical learning/2019-02-06 Class/in-class exercise.R', echo=TRUE)
df_comscorefunc1986 <- subset(df,calc_age(1986,df$DOB_Yr_Child)==age1)
df_comscorefunc1986_result <- cbind(df_comscorefunc1986[,"ChildID"],df_comscorefunc1986[,"Test_Pct86"])
compscorefunc <- function(age1){
df_comscorefunc1986 <- subset(df,calc_age(1986,df$DOB_Yr_Child)==age1)
df_comscorefunc1986_result <- cbind(df_comscorefunc1986[,"ChildID"],df_comscorefunc1986[,"Test_Pct86"])
df_comscorefunc1988 <- subset(df,calc_age(1988,df$DOB_Yr_Child)==age1)
df_comscorefunc1988_result <- cbind(df_comscorefunc1988[,"ChildID"],df_comscorefunc1988[,"Test_Pct88"])
df_comscorefunc1990 <- subset(df,calc_age(1990,df$DOB_Yr_Child)==age1)
df_comscorefunc1990_result <- cbind(df_comscorefunc1990[,"ChildID"],df_comscorefunc1990[,"Test_Pct90"])
df_comscorefunc1992 <- subset(df,calc_age(1992,df$DOB_Yr_Child)==age1)
df_comscorefunc1992_result <- cbind(df_comscorefunc1992[,"ChildID"],df_comscorefunc1992[,"Test_Pct92"])
df_comscorefunc1994 <- subset(df,calc_age(1994,df$DOB_Yr_Child)==age1)
df_comscorefunc1994_result <- cbind(df_comscorefunc1994[,"ChildID"],df_comscorefunc1994[,"Test_Pct94"])
df_comscorefunc1996 <- subset(df,calc_age(1996,df$DOB_Yr_Child)==age1)
df_comscorefunc1996_result <- cbind(df_comscorefunc1996[,"ChildID"],df_comscorefunc1996[,"Test_Pct96"])
df_comscorefunc1998 <- subset(df,calc_age(1998,df$DOB_Yr_Child)==age1)
df_comscorefunc1998_result <- cbind(df_comscorefunc1998[,"ChildID"],df_comscorefunc1998[,"Test_Pct98"])
df_comscorefunc2000 <- subset(df,calc_age(2000,df$DOB_Yr_Child)==age1)
df_comscorefunc2000_result <- cbind(df_comscorefunc2000[,"ChildID"],df_comscorefunc2000[,"Test_Pct100"])
df_comscorefunc2002 <- subset(df,calc_age(2002,df$DOB_Yr_Child)==age1)
df_comscorefunc2002_result <- cbind(df_comscorefunc2002[,"ChildID"],df_comscorefunc2002[,"Test_Pct102"])
df_comscorefunc2004 <- subset(df,calc_age(2004,df$DOB_Yr_Child)==age1)
df_comscorefunc2004_result <- cbind(df_comscorefunc2004[,"ChildID"],df_comscorefunc2004[,"Test_Pct104"])
}
#final dataset processing
library(tidyverse)
library(readstata13)
library(matrixStats)
df <- read.dta13("../data/deming_final_data.dta")
finaldataset <- c()
# from the original datasets
finaldataset <- df[,c("ChildID","MotherID","Hispanic","Black","Male","FirstBorn","LogInc_0to3",
"MothED","Father_HH_0to3","PPVTat3","logBW","Repeat","HSGrad","HSGrad_GED",
"someCollAtt","Idle","PoorHealth","Age_Moth_Birth","Age_1stHS88","Age_1stHS90",
"Age_1stHS92","Age_1stHS94","Age_1stHS96","Age_1stHS98","Age_1stHS100","Age_1stHS102",
"Age_1stHS104","BirthWeight"
)]
# frank's contribution
finaldataset$headstart <- ifelse(
rowMaxs(
as.matrix(
select(df,Ever_HS88:Ever_HS104)
)
,na.rm = TRUE)
>0,1,0)
finaldataset$mentaldisability <- ifelse(
rowMaxs(
as.matrix(
select(df,Retard86:Retard100)
)
,na.rm = TRUE)
>0,1,0)
finaldataset$somecollege <- ifelse(
rowMaxs(
as.matrix(
select(df,HighGrade_Compl94:HighGrade_Compl104)
)
,na.rm = TRUE)
>=12,1,0)
finaldataset$hsgrad <- ifelse(
rowMaxs(
as.matrix(
select(df,HighGrade_Compl94:HighGrade_Compl104)
)
,na.rm = TRUE)
>=12,1,0)
finaldataset$learndisability <- ifelse(
rowMaxs(
as.matrix(
select(df,LD86:LD94)
)
,na.rm = TRUE)
>0,1,0)
finaldataset$repeatgrade <- ifelse(
rowMaxs(
as.matrix(
select(df,Repeat88:Repeat104)
)
,na.rm = TRUE)
>0,1,0)
#calculate age of child at year
calc_age <- function(currentyear,childyear){
currentyear-childyear
}
df$childage1986 <- calc_age(1986,df$DOB_Yr_Child)
df$childage1988 <- calc_age(1988,df$DOB_Yr_Child)
df$childage1990 <- calc_age(1990,df$DOB_Yr_Child)
df$childage1992 <- calc_age(1992,df$DOB_Yr_Child)
df$childage1994 <- calc_age(1994,df$DOB_Yr_Child)
df$childage1996 <- calc_age(1996,df$DOB_Yr_Child)
df$childage1998 <- calc_age(1998,df$DOB_Yr_Child)
df$childage2000 <- calc_age(2000,df$DOB_Yr_Child)
df$childage2002 <- calc_age(2002,df$DOB_Yr_Child)
df$childage2004 <- calc_age(2004,df$DOB_Yr_Child)
setwd("C:/Dropbox/Classes/ECO 395M Data mining and statisical learning/eco395m_team_awesome/final project/analysis")
#final dataset processing
library(tidyverse)
library(readstata13)
library(matrixStats)
df <- read.dta13("../data/deming_final_data.dta")
finaldataset <- c()
# from the original datasets
finaldataset <- df[,c("ChildID","MotherID","Hispanic","Black","Male","FirstBorn","LogInc_0to3",
"MothED","Father_HH_0to3","PPVTat3","logBW","Repeat","HSGrad","HSGrad_GED",
"someCollAtt","Idle","PoorHealth","Age_Moth_Birth","Age_1stHS88","Age_1stHS90",
"Age_1stHS92","Age_1stHS94","Age_1stHS96","Age_1stHS98","Age_1stHS100","Age_1stHS102",
"Age_1stHS104","BirthWeight"
)]
# frank's contribution
finaldataset$headstart <- ifelse(
rowMaxs(
as.matrix(
select(df,Ever_HS88:Ever_HS104)
)
,na.rm = TRUE)
>0,1,0)
finaldataset$mentaldisability <- ifelse(
rowMaxs(
as.matrix(
select(df,Retard86:Retard100)
)
,na.rm = TRUE)
>0,1,0)
finaldataset$somecollege <- ifelse(
rowMaxs(
as.matrix(
select(df,HighGrade_Compl94:HighGrade_Compl104)
)
,na.rm = TRUE)
>=12,1,0)
finaldataset$hsgrad <- ifelse(
rowMaxs(
as.matrix(
select(df,HighGrade_Compl94:HighGrade_Compl104)
)
,na.rm = TRUE)
>=12,1,0)
finaldataset$learndisability <- ifelse(
rowMaxs(
as.matrix(
select(df,LD86:LD94)
)
,na.rm = TRUE)
>0,1,0)
finaldataset$repeatgrade <- ifelse(
rowMaxs(
as.matrix(
select(df,Repeat88:Repeat104)
)
,na.rm = TRUE)
>0,1,0)
#calculate age of child at year
calc_age <- function(currentyear,childyear){
currentyear-childyear
}
df$childage1986 <- calc_age(1986,df$DOB_Yr_Child)
df$childage1988 <- calc_age(1988,df$DOB_Yr_Child)
df$childage1990 <- calc_age(1990,df$DOB_Yr_Child)
df$childage1992 <- calc_age(1992,df$DOB_Yr_Child)
df$childage1994 <- calc_age(1994,df$DOB_Yr_Child)
df$childage1996 <- calc_age(1996,df$DOB_Yr_Child)
df$childage1998 <- calc_age(1998,df$DOB_Yr_Child)
df$childage2000 <- calc_age(2000,df$DOB_Yr_Child)
df$childage2002 <- calc_age(2002,df$DOB_Yr_Child)
df$childage2004 <- calc_age(2004,df$DOB_Yr_Child)
age1 <- 6
df_comscorefunc1986 <- subset(df,calc_age(1986,df$DOB_Yr_Child)==age1)
df_comscorefunc1986_result <- cbind(df_comscorefunc1986[,"ChildID"],df_comscorefunc1986[,"Test_Pct86"])
View(df_comscorefunc1986_result)
View(df_comscorefunc1986_result)
df_comscorefunc1986 <- subset(df,calc_age(1986,df$DOB_Yr_Child)==age1)
df_comscorefunc1986_result <- cbind(df_comscorefunc1986[,"ChildID"],df_comscorefunc1986[,"Test_Pct86"])
df_comscorefunc1988 <- subset(df,calc_age(1988,df$DOB_Yr_Child)==age1)
df_comscorefunc1988_result <- cbind(df_comscorefunc1988[,"ChildID"],df_comscorefunc1988[,"Test_Pct88"])
df_comscorefunc1990 <- subset(df,calc_age(1990,df$DOB_Yr_Child)==age1)
df_comscorefunc1990_result <- cbind(df_comscorefunc1990[,"ChildID"],df_comscorefunc1990[,"Test_Pct90"])
df_comscorefunc1992 <- subset(df,calc_age(1992,df$DOB_Yr_Child)==age1)
df_comscorefunc1992_result <- cbind(df_comscorefunc1992[,"ChildID"],df_comscorefunc1992[,"Test_Pct92"])
df_comscorefunc1994 <- subset(df,calc_age(1994,df$DOB_Yr_Child)==age1)
df_comscorefunc1994_result <- cbind(df_comscorefunc1994[,"ChildID"],df_comscorefunc1994[,"Test_Pct94"])
df_comscorefunc1996 <- subset(df,calc_age(1996,df$DOB_Yr_Child)==age1)
df_comscorefunc1996_result <- cbind(df_comscorefunc1996[,"ChildID"],df_comscorefunc1996[,"Test_Pct96"])
df_comscorefunc1998 <- subset(df,calc_age(1998,df$DOB_Yr_Child)==age1)
df_comscorefunc1998_result <- cbind(df_comscorefunc1998[,"ChildID"],df_comscorefunc1998[,"Test_Pct98"])
df_comscorefunc2000 <- subset(df,calc_age(2000,df$DOB_Yr_Child)==age1)
df_comscorefunc2000_result <- cbind(df_comscorefunc2000[,"ChildID"],df_comscorefunc2000[,"Test_Pct100"])
df_comscorefunc2002 <- subset(df,calc_age(2002,df$DOB_Yr_Child)==age1)
df_comscorefunc2002_result <- cbind(df_comscorefunc2002[,"ChildID"],df_comscorefunc2002[,"Test_Pct102"])
df_comscorefunc2004 <- subset(df,calc_age(2004,df$DOB_Yr_Child)==age1)
df_comscorefunc2004_result <- cbind(df_comscorefunc2004[,"ChildID"],df_comscorefunc2004[,"Test_Pct104"])
rbind(df_comscorefunc1986_result,df_comscorefunc1988_result,df_comscorefunc1990_result,df_comscorefunc1992_result,
df_comscorefunc1994_result,df_comscorefunc1996_result,df_comscorefunc1998_result,df_comscorefunc2000_result,
df_comscorefunc2002_result,df_comscorefunc2004_result)
compscoreage6 <- compscorefunc("6")
compscorefunc <- function(age1){
df_comscorefunc1986 <- subset(df,calc_age(1986,df$DOB_Yr_Child)==age1)
df_comscorefunc1986_result <- cbind(df_comscorefunc1986[,"ChildID"],df_comscorefunc1986[,"Test_Pct86"])
df_comscorefunc1988 <- subset(df,calc_age(1988,df$DOB_Yr_Child)==age1)
df_comscorefunc1988_result <- cbind(df_comscorefunc1988[,"ChildID"],df_comscorefunc1988[,"Test_Pct88"])
df_comscorefunc1990 <- subset(df,calc_age(1990,df$DOB_Yr_Child)==age1)
df_comscorefunc1990_result <- cbind(df_comscorefunc1990[,"ChildID"],df_comscorefunc1990[,"Test_Pct90"])
df_comscorefunc1992 <- subset(df,calc_age(1992,df$DOB_Yr_Child)==age1)
df_comscorefunc1992_result <- cbind(df_comscorefunc1992[,"ChildID"],df_comscorefunc1992[,"Test_Pct92"])
df_comscorefunc1994 <- subset(df,calc_age(1994,df$DOB_Yr_Child)==age1)
df_comscorefunc1994_result <- cbind(df_comscorefunc1994[,"ChildID"],df_comscorefunc1994[,"Test_Pct94"])
df_comscorefunc1996 <- subset(df,calc_age(1996,df$DOB_Yr_Child)==age1)
df_comscorefunc1996_result <- cbind(df_comscorefunc1996[,"ChildID"],df_comscorefunc1996[,"Test_Pct96"])
df_comscorefunc1998 <- subset(df,calc_age(1998,df$DOB_Yr_Child)==age1)
df_comscorefunc1998_result <- cbind(df_comscorefunc1998[,"ChildID"],df_comscorefunc1998[,"Test_Pct98"])
df_comscorefunc2000 <- subset(df,calc_age(2000,df$DOB_Yr_Child)==age1)
df_comscorefunc2000_result <- cbind(df_comscorefunc2000[,"ChildID"],df_comscorefunc2000[,"Test_Pct100"])
df_comscorefunc2002 <- subset(df,calc_age(2002,df$DOB_Yr_Child)==age1)
df_comscorefunc2002_result <- cbind(df_comscorefunc2002[,"ChildID"],df_comscorefunc2002[,"Test_Pct102"])
df_comscorefunc2004 <- subset(df,calc_age(2004,df$DOB_Yr_Child)==age1)
df_comscorefunc2004_result <- cbind(df_comscorefunc2004[,"ChildID"],df_comscorefunc2004[,"Test_Pct104"])
rbind(df_comscorefunc1986_result,df_comscorefunc1988_result,df_comscorefunc1990_result,df_comscorefunc1992_result,
df_comscorefunc1994_result,df_comscorefunc1996_result,df_comscorefunc1998_result,df_comscorefunc2000_result,
df_comscorefunc2002_result,df_comscorefunc2004_result)
}
compscoreage6 <- compscorefunc("6")
View(compscoreage6)
names(compscoreage6) <- c("ChildID","compscoreage6")
View(compscoreage6)
View(compscoreage6)
names(compscoreage6) <- c("ChildID","compscoreage6")
View(compscoreage6)
colnames(compscoreage6) <- c("ChildID","compscoreage6")
View(compscoreage6)
source('C:/Dropbox/Classes/ECO 395M Data mining and statisical learning/eco395m_team_awesome/final project/analysis/final dataset processing.R', echo=TRUE)
test <- merge(finaldataset,compscoreage6,by="ChildID",all=TRUE)
View(test)
finaldataset <- merge(finaldataset,compscoreage6,by="ChildID",all=TRUE)
finaldataset <- merge(finaldataset,compscoreage6,by="ChildID",all=TRUE)
finaldataset <- merge(finaldataset,compscoreage7,by="ChildID",all=TRUE)
finaldataset <- merge(finaldataset,compscoreage8,by="ChildID",all=TRUE)
finaldataset <- merge(finaldataset,compscoreage9,by="ChildID",all=TRUE)
finaldataset <- merge(finaldataset,compscoreage10,by="ChildID",all=TRUE)
finaldataset <- merge(finaldataset,compscoreage11,by="ChildID",all=TRUE)
finaldataset <- merge(finaldataset,compscoreage12,by="ChildID",all=TRUE)
finaldataset <- merge(finaldataset,compscoreage13,by="ChildID",all=TRUE)
finaldataset <- merge(finaldataset,compscoreage14,by="ChildID",all=TRUE)
finaldataset <- merge(finaldataset,compscoreage15,by="ChildID",all=TRUE)
finaldataset <- merge(finaldataset,compscoreage16,by="ChildID",all=TRUE)
finaldataset <- merge(finaldataset,compscoreage17,by="ChildID",all=TRUE)
finaldataset <- merge(finaldataset,compscoreage18,by="ChildID",all=TRUE)
write.csv(finaldataset, file = "../data/finaldataset.csv",row.names=FALSE)
View(finaldataset)
source('C:/Dropbox/Classes/ECO 395M Data mining and statisical learning/eco395m_team_awesome/final project/analysis/final dataset processing.R', echo=TRUE)
setwd("C:/Dropbox/Classes/ECO 395M Data mining and statisical learning/eco395m_team_awesome/final project/analysis")
library(tidyverse)
df <- read.csv("../data/finaldataset.csv")
library(tidyverse)
df <- read.csv("../data/finaldataset.csv")
View(df)
summary(df[,compscoreage6])
summary(df[,"compscoreage6"])
summary(df[,"compscoreage7"])
summary(df[,"compscoreage8"])
summary(df[,"compscoreage9"])
summary(df[,"compscoreage10"])
summary(df[,"compscoreage11"])
summary(df[,"compscoreage12"])
summary(df[,"compscoreage13"])
summary(df[,"compscoreage14"])
summary(df[,"compscoreage15"])
summary(df[,"compscoreage16"])
summary(df[,"compscoreage17"])
summary(df[,"compscoreage18"])
names(df)
lm1 <- lm(comscoreage6~hispanic
)
lm1 <- lm(compscoreage6~hispanic
)
lm1 <- lm(compscoreage6~hispanic
)
lm1 <- lm(compscoreage6~hispanic,df
)
lm1 <- lm(compscoreage6~Hispanic,df
)
View(lm1)
lm
lm1
lm1
View(df)
names(df)
lm1 <- lm(compscoreage6~.,df
)
lm1 <- lm(compscoreage6~compscoreage7,df
)
lm1 <- lm(compscoreage6~compscoreage7,df,na.omit
)
lm1 <- lm(compscoreage6~(.-compscoreage6:compscoreage18),df,na.omit
)
lm1 <- lm(compscoreage6~Hispanic+Black+Male+FirstBorn+MothED,df,na.omit
)
lm1 <- lm(compscoreage6~Hispanic+Black+Male+FirstBorn+MothED,df
)
lm1
lm1 <- lm(compscoreage6~.,df
)
lm1 <- lm(compscoreage6~(.-compscoreage6:compscoreage18),df
)
lm1 <- lm(compscoreage6~Hispanic+Black+Male+FirstBorn+MothED+headstart+mentaldisability+,df
)
lm1 <- lm(compscoreage6~Hispanic+Black+Male+FirstBorn+MothED+headstart+mentaldisability,df
)
lm1
