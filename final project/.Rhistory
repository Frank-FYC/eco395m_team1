setwd("~/GitHub/eco395m_team_awesome/final project")
install.packages(foreign)
install.packages("foreign")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(tidyverse)
## read in the data
spamfit = read.csv("https://github.com/jgscott/ECO395M/blob/master/data/spamfit.csv")
summary(spamfit)
view(spamfit)
library(tidyverse)
## read in the data
spamfit = read.csv("https://raw.githubusercontent.com/jgscott/ECO395M/master/data/spamfit.csv")
summary(spamfit)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
confusion_in = table(y = spamfit$y, yhat = yhat_train_spam1)
# in-sample accuracy?
yhat_train = ifelse(predict(lm1) >= 0.5, 1, 0)
x= table(y=spamfit$y, yhat=yhat_train)
x
probhat_test = predict(lm1, newdata=spamtest)
yhat_test = ifelse(probhat_test >= 0.5, 1, 0)
y= table(y=spamtest$y, yhat=yhat_test)
y
sum(diag(x))/sum(x)
sum(diag(y))/sum(y)
#logit
glm(y ~ log(capital.run.length.average), data=spamfit, family=binomial)
#logit
logit_fit = glm(y ~ log(capital.run.length.average), data=spamfit, family=binomial)
logit_fit
coef(logit_fit)
phat_test_logit_spam = predict(logit_fit, spamtest, type='response')
yhat_test_logit_spam = ifelse(phat_test_logit_spam > 0.5, 1, 0)
confusion_out_logit = table(y = spamtest$y, yhat = yhat_test_logit_spam)
confusion_out_logit
z = table(y = spamtest$y, yhat = yhat_test_logit_spam)
z
sum(diag(z))/sum(z)
